apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  namespace: default
  name: sonar-data-pvc
spec:
  accessModes:
  - ReadWriteOnce
  storageClassName: default
  resources:
    requests:
      storage: 5Gi


---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  namespace: default
  name: sonar-extersion-pvc
spec:
  accessModes:
  - ReadWriteOnce
  storageClassName: default
  resources:
    requests:
      storage: 5Gi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sonarqube
  namespace: default
spec:
  selector:
    matchLabels:
      name: sonarqube
  replicas: 1    
  template:
    metadata:
      labels:
        name: sonarqube
    spec:
      initContainers:
      - name: init
        image: busybox
        command:
        - sysctl
        - -w
        - vm.max_map_count=262144
        imagePullPolicy: IfNotPresent
        securityContext:
          privileged: true
      containers:
        - name: sonarqube
          image: sonarqube:8.9.2-community        
          imagePullPolicy: IfNotPresent
          
          livenessProbe:
            httpGet:
              path: /
              port: 9000
              scheme: HTTP
            initialDelaySeconds: 60    
            periodSeconds: 10    
            failureThreshold: 3
         
          
          resources:
            requests:
              cpu: 500m
              memory: 1024Mi
            limits:
              cpu: 2000m
              memory: 7048Mi
          volumeMounts:
          - mountPath: /opt/sonarqube/data/
            name: sonar-data
          - mountPath: /opt/sonarqube/extensions/
            name: sonar-extensions
          env:
          - name: "SONARQUBE_JDBC_URL"
            value: "jdbc:postgresql://postgres:5432/sonarqube"
          - name: "SONARQUBE_JDBC_USERNAME"
            valueFrom:
               secretKeyRef:
                 name: postgres-secrets
                 key: username
          - name: "SONARQUBE_JDBC_PASSWORD"
            valueFrom:
              secretKeyRef:
                name: postgres-secrets
                key: password                 
          ports:
          - containerPort: 9000
            protocol: TCP
      volumes:
      - name: sonar-data
        persistentVolumeClaim:
          claimName: sonar-data-pvc
          
      - name: sonar-extensions
        persistentVolumeClaim:
         claimName: sonar-extersion-pvc

---
apiVersion: v1
kind: Service
metadata:
  name: sonarqube
  namespace: default
  labels:
    name: sonarqube
  annotations: 
    sonarqube: sonarqube check vulnerability 
spec:
  #type: LoadBalancer
  #loadBalancerIP: 172.21.0.200
  ports:
    - name: sonarqube
      port: 9000
      protocol: TCP
      targetPort: 9000
  selector:
    name: sonarqube

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: traefik-ingress-sonar
  namespace: default
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-staging-devops
    kubernetes.io/ingress.class: traefik
    traefik.ingress.kubernetes.io/router.tls: "true"
    traefik.ingress.kubernetes.io/proxy-body-size: "20m"
spec:

  tls:
  - hosts:
    - sonar.devopslabs.live
    secretName: sonar.devopslabs.live.tls
  rules:
  - host: sonar.devopslabs.live
    http:
      paths:
      - backend:
          service:
            name: sonarqube
            port:
              number: 9000
        path: /
        pathType: Prefix   